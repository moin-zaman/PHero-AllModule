1. VCS হলো Version Control System, অর্থাৎ এমন একটি সিস্টেম যা কোড বা ফাইলের বিভিন্ন সংস্করণ (version) collection ও control করে।

উদাহরণ: Git, SVN, Mercurial ইত্যাদি।

2. Git হলো একটি Distributed Version Control System (DVCS)।
মানে, আপনার কম্পিউটারে পুরো রিপোজিটরির (repository) কপি থাকবে এবং সেন্ট্রাল সার্ভারের ওপর পুরোপুরি নির্ভরশীল না।

Git দিয়ে আপনি করতে পারবেন:

i)কোড ট্র্যাক করা (কে কোন লাইনে পরিবর্তন করেছে)

ii)Branch তৈরি করে আলাদা ফিচার ডেভেলপ করা

iii)Merge করে আবার main কোডের সাথে মিশিয়ে দেওয়া


3. GitHub হলো Git রিপোজিটরি হোস্ট করার একটি অনলাইন প্ল্যাটফর্ম।

I)আপনার কোড অনলাইনে রাখতে পারবেন

ii)টিম মেম্বারদের সাথে কাজ করতে পারবেন

iii)Issues, Pull Request, CI/CD ইত্যাদি ব্যবহার করতে পারবেন

Git = Version Control করার টুল

GitHub = Git রিপোজিটরির জন্য ক্লাউড হোস্টিং সার্ভিস


Git Command :

1. git init
I) তোমার প্রজেক্ট ফোল্ডারের মধ্যে একটি .git নামের হিডেন ফোল্ডার তৈরি হয়।
ii) এই ফোল্ডারে Git-এর সব ডাটা (commit history, branches, configuration ইত্যাদি) সেভ হয়।
iii)এর মানে হলো, এই ফোল্ডারটাকে এখন Git রিপোজিটরি হিসাবে সেট করা হয়েছে।

 তুমি Git দিয়ে প্রজেক্ট ট্র্যাক করা শুরু করলে।

2. git add .
i) প্রজেক্টের সব ফাইল staging area-তে চলে যায়।
ii) Git-কে বললে “এই ফাইলগুলো আমি কমিট করতে চাই”।

3. git commit -m "First"
I) Git তোমার স্টেজ করা ফাইলগুলোকে একটি snapshot আকারে সেভ করে এবং ইতিহাসে (history) যোগ করে।
ii)কোডের প্রথম চেকপয়েন্ট তৈরি করলে।

4.git branch -m main
I) Git ডিফল্টভাবে যে ব্রাঞ্চের নাম দেয় সেটা হলো master।
ii)তুমি বললে “আমার প্রজেক্টের মেইন ব্রাঞ্চের নাম হবে main”।

5. যদি তুমি এই রিপোজিটরিকে GitHub-এর সাথে কানেক্ট করতে চাও, তবে git remote add origin <repo-URL>



তুমি যখন প্রজেক্টে পরিবর্তন করো, Git সেটা সঙ্গে সঙ্গে সেভ করে না।
প্রথমে তুমি বলো git add দিয়ে কোন ফাইলগুলো রাখতে চাও (স্টেজিং এরিয়া)।
তারপর git commit দিয়ে Git-কে বলো:
“এই স্টেজ করা ফাইলগুলো আমি এখন ইতিহাসে সেভ করতে চাই।”

Staging Area = এমন একটি জায়গা যেখানে তুমি “কমিটের জন্য প্রস্তুত” ফাইলগুলো রাখো।
Git Repository = যেখানে commit হয়ে ফাইনাল সেভ থাকে।